{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"run_train_colab","version":"0.3.2","provenance":[{"file_id":"/v2/external/notebooks/welcome.ipynb","timestamp":1558647512393}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"epWSFGU-c964","colab_type":"code","outputId":"7a8f4823-d91b-47b1-8471-2b46cbbdd172","executionInfo":{"status":"ok","timestamp":1558711680704,"user_tz":-120,"elapsed":487,"user":{"displayName":"Olof Harrysson","photoUrl":"","userId":"12308906012213297705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"a80FtSAXKzxr","colab_type":"code","colab":{}},"source":["%%capture\n","!git clone https://gitlab.com/OlofHarrysson/auto-findimagecopies.git\n","%cd auto-findimagecopies"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"MFHo9ijjRf6V","colab_type":"code","colab":{}},"source":["!ln -s \"/content/gdrive/My Drive/Colab Notebooks/projects/isimagecopy/datasets\" \".\"\n","# !cp -r \"/content/gdrive/My Drive/Colab Notebooks/projects/isimagecopy/datasets\" \".\" # Initially slow but for longer trainings better"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8frqvDYwLmZ4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"6c42febf-3b96-4354-9f0f-a50f36451f3c","executionInfo":{"status":"ok","timestamp":1558712620989,"user_tz":-120,"elapsed":2959,"user":{"displayName":"Olof Harrysson","photoUrl":"","userId":"12308906012213297705"}}},"source":["get_ipython().system_raw('python3 -m pip install visdom')\n","get_ipython().system_raw('python3 -m visdom.server -port 6006 >> visdomlog.txt 2>&1 &')\n","# If serveo doesn't work for you there is also ngrok and localtunnel\n","get_ipython().system_raw('ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -R findimagecopies:80:localhost:6006 serveo.net &')\n","print('Visdom view: {}'.format('https://findimagecopies.serveo.net/'))"],"execution_count":39,"outputs":[{"output_type":"stream","text":["Visdom view: https://findimagecopies.serveo.net/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cglffy_FM3YO","colab_type":"code","outputId":"94846de5-327b-4f9b-a8fe-a512ef21f36b","executionInfo":{"status":"ok","timestamp":1558713118903,"user_tz":-120,"elapsed":22926,"user":{"displayName":"Olof Harrysson","photoUrl":"","userId":"12308906012213297705"}},"colab":{"base_uri":"https://localhost:8080/","height":425}},"source":["!python3 train.py"],"execution_count":42,"outputs":[{"output_type":"stream","text":["WARNING:root:Setting up a new session...\n","datasets/cifar_bigger\n"," 12% Epoch: 11/100, Batch: 10/10 |       | Elapsed Time: 0:00:14 ETA:   0:01:54 Traceback (most recent call last):\n","  File \"train.py\", line 92, in <module>\n","    train()\n","  File \"train.py\", line 58, in train\n","    for batch_i, data in enumerate(dataloader, 1):\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 576, in __next__\n","    idx, batch = self._get_batch()\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 553, in _get_batch\n","    success, data = self._try_get_batch()\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 511, in _try_get_batch\n","    data = self.data_queue.get(timeout=timeout)\n","  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 104, in get\n","    if not self._poll(timeout):\n","  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 257, in poll\n","    return self._poll(timeout)\n","  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 414, in _poll\n","    r = wait([self], timeout)\n","  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 911, in wait\n","    ready = selector.select(timeout)\n","  File \"/usr/lib/python3.6/selectors.py\", line 376, in select\n","    fd_event_list = self._poll.poll(timeout)\n","KeyboardInterrupt\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8xI88gfBMPTU","colab_type":"code","outputId":"69d48490-15dc-48fe-a60d-24ec533f9dc1","executionInfo":{"status":"ok","timestamp":1558713093220,"user_tz":-120,"elapsed":2689,"user":{"displayName":"Olof Harrysson","photoUrl":"","userId":"12308906012213297705"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"source":["!git pull"],"execution_count":41,"outputs":[{"output_type":"stream","text":["remote: Enumerating objects: 6, done.\u001b[K\n","remote: Counting objects:  16% (1/6)   \u001b[K\rremote: Counting objects:  33% (2/6)   \u001b[K\rremote: Counting objects:  50% (3/6)   \u001b[K\rremote: Counting objects:  66% (4/6)   \u001b[K\rremote: Counting objects:  83% (5/6)   \u001b[K\rremote: Counting objects: 100% (6/6)   \u001b[K\rremote: Counting objects: 100% (6/6), done.\u001b[K\n","remote: Compressing objects:  25% (1/4)   \u001b[K\rremote: Compressing objects:  50% (2/4)   \u001b[K\rremote: Compressing objects:  75% (3/4)   \u001b[K\rremote: Compressing objects: 100% (4/4)   \u001b[K\rremote: Compressing objects: 100% (4/4), done.\u001b[K\n","remote: Total 4 (delta 2), reused 0 (delta 0)\u001b[K\n","Unpacking objects:  25% (1/4)   \rUnpacking objects:  50% (2/4)   \rUnpacking objects:  75% (3/4)   \rUnpacking objects: 100% (4/4)   \rUnpacking objects: 100% (4/4), done.\n","From https://gitlab.com/OlofHarrysson/auto-findimagecopies\n","   eacaa16..557b4c2  master     -> origin/master\n","Updating eacaa16..557b4c2\n","Fast-forward\n"," logger.py       | 2 \u001b[32m+\u001b[m\u001b[31m-\u001b[m\n"," run_train_colab | 1 \u001b[32m+\u001b[m\n"," 2 files changed, 2 insertions(+), 1 deletion(-)\n"," create mode 100644 run_train_colab\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9m4qNK2LX1kB","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XBcR1JFFbCWA","colab_type":"code","outputId":"75bf3f7d-49e0-4929-ef06-a38f708f00aa","executionInfo":{"status":"ok","timestamp":1558713138551,"user_tz":-120,"elapsed":2796,"user":{"displayName":"Olof Harrysson","photoUrl":"","userId":"12308906012213297705"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import files\n","from pathlib import Path\n","project_dir = Path('/content/gdrive/My Drive/Colab Notebooks/projects/isimagecopy')\n","this_file = project_dir / 'run_train_colab'\n","print(this_file, this_file.exists())\n","files.download(this_file)"],"execution_count":43,"outputs":[{"output_type":"stream","text":["/content/gdrive/My Drive/Colab Notebooks/projects/isimagecopy/run_train_colab True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yYlTkSkrivIT","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}